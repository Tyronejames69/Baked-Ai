 // Load saved chats
 window.onload = () => {
   const savedChats = localStorage.getItem('bakedAIChats');
   if (savedChats) {
     chatOutput.innerHTML = savedChats;
     chatCount = chatOutput.querySelectorAll('p').length / 2;
     document.getElementById('chat-count').textContent = chatCount;
   }
 };

 // Tab switching
 document.querySelectorAll('.tab').forEach(tab => {
   tab.addEventListener('click', () => {
     document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
     document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
     tab.classList.add('active');
     document.getElementById(tab.dataset.tab).classList.add('active');
   });
 });

 // Theme toggle
 document.getElementById('theme-toggle').addEventListener('click', () => {
   document.body.classList.toggle('light');
   const icon = document.getElementById('theme-toggle').querySelector('i');
   icon.classList.toggle('fa-moon');
   icon.classList.toggle('fa-sun');
 });

 // Chat handling
 function handleChat() {
   const input = document.getElementById('chat-input').value.trim().toLowerCase();
   if (!input) {
     chatOutput.innerHTML += '<p class="error">Please type a question!</p>';
     return;
   }
   chatCount++;
   const response = chatResponses[input] || chatResponses['default'].replace('{input}', input);
   chatOutput.innerHTML += `
     <p><b>You:</b> ${input} <button class="copy-btn" onclick="copyText(this)">Copy</button></p>
     <p><b>Baked AI:</b> ${response} <button class="copy-btn" onclick="copyText(this)">Copy</button></p>
   `;
   document.getElementById('chat-count').textContent = chatCount;
   localStorage.setItem('bakedAIChats', chatOutput.innerHTML);
   chatOutput.scrollTop = chatOutput.scrollHeight;
   document.getElementById('chat-input').value = '';
 }

 function clearChat() {
   chatOutput.innerHTML = '';
   chatCount = 0;
   document.getElementById('chat-count').textContent = chatCount;
   localStorage.removeItem('bakedAIChats');
 }

 function downloadChat() {
   const content = chatOutput.textContent || 'No chats yet!';
   const blob = new Blob([content], { type: 'text/plain' });
   const url = URL.createObjectURL(blob);
   const a = document.createElement('a');
   a.href = url;
   a.download = 'baked-ai-chat.txt';
   a.click();
   URL.revokeObjectURL(url);
 }

 // Code generation
 function handleCodeGen() {
   const input = document.getElementById('code-input').value.trim().toLowerCase();
   if (!input) {
     codeOutput.innerHTML += '<pre class="error">Please describe a website!</pre>';
     return;
   }
   codeCount++;
   const template = codeTemplates[input.split(' ')[0]] || codeTemplates['default'].replace('{input}', input);
   codeOutput.innerHTML += `<pre>${template}<button class="copy-btn" onclick="copyText(this)">Copy</button></pre>`;
   document.getElementById('code-count').textContent = codeCount;
   codeOutput.scrollTop = codeOutput.scrollHeight;
   document.getElementById('code-input').value = '';
 }

 function downloadCode() {
   const content = codeOutput.textContent || 'No code generated yet!';
   const blob = new Blob([content], { type: 'text/plain' });
   const url = URL.createObjectURL(blob);
   const a = document.createElement('a');
   a.href = url;
   a.download = 'baked-ai-code.txt';
   a.click();
   URL.revokeObjectURL(url);
 }

 // Image generation
 function handleImageGen() {
   const input = document.getElementById('image-input').value.trim();
   if (!input) {
     imageOutput.innerHTML += '<p class="error">Please describe an image!</p>';
     return;
   }
   imageCount++;
   imageOutput.innerHTML += `
     <p><b>Prompt:</b> ${input} <button class="copy-btn" onclick="copyText(this)">Copy</button></p>
     <img src="https://via.placeholder.com/300?text=${encodeURIComponent(input)}" alt="Placeholder">
     <p>(Mock image by Baked AI) <button class="copy-btn" onclick="copyText(this)">Copy</button></p>
   `;
   document.getElementById('image-count').textContent = imageCount;
   imageOutput.scrollTop = imageOutput.scrollHeight;
   document.getElementById('image-input').value = '';
 }

 function downloadImagePrompt() {
   const content = imageOutput.textContent || 'No prompts generated yet!';
   const blob = new Blob([content], { type: 'text/plain' });
   const url = URL.createObjectURL(blob);
   const a = document.createElement('a');
   a.href = url;
   a.download = 'baked-ai-image-prompts.txt';
   a.click();
   URL.revokeObjectURL(url);
 }

 // Copy to clipboard
 function copyText(btn) {
   const text = btn.parentElement.textContent.replace('Copy', '').trim();
   navigator.clipboard.writeText(text).then(() => {
     btn.textContent = 'Copied!';
     setTimeout(() => btn.textContent = 'Copy', 2000);
   });
 }
 ```
